@page "/spreadsheet"

@*
    Values are passed to children using CascadingValue with IsFixed=true, this avoids
    click events etc in this component from forcing child components to re-render.
*@

<PageTitle>Spreadsheet</PageTitle>

<h1>Spreadsheet</h1>

<div class="spreadsheet">
    <div class="header">
        <p>Either edit the values manually, or click the button below to alter random cells. (You can do both at the same time).</p>
        <button class="btn @IncrementRandomCellsButtonClass" type=button @onclick=ToggleAutoValues>@IncrementRandomCellsButtonCaption</button>
        <button class="btn btn-secondary" type=button @onclick=IncrementRandomCell>Alter a random cell</button>
    </div>
    <div class="data">
        <EditForm Model=@this>
            <CascadingValue Value=@Sheet IsFixed=@true>
                <table>
                    @for (int row = 0; row < Sheet.RowCount; row++)
                    {
                        <tr>
                            @for (int column = 0; column < Sheet.ColumnCount; column++)
                            {
                                <td>
                                    <CascadingValue Name="@(Cell.LocationPropertyName)" Value=@((column, row)) IsFixed=@true>
                                        <Cell />
                                    </CascadingValue>
                                </td>
                            }
                        </tr>
                    }
                </table>
            </CascadingValue>
        </EditForm>
    </div>
</div>